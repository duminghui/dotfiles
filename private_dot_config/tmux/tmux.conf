# vim: ft=tmux

# 参考的配置
# https://github.com/gpakosz/.tmux

# enable true colors
# set -g default-terminal "xterm-256color"
set -g default-terminal "screen-256color"

# fix for nvim
set -ga terminal-overrides ",xterm-256color:Tc"

# Setting the prefix from C-b to C-a
set -g prefix C-a

# Free the original C-b prefix keybinding
unbind C-b

# Ensure that we can send Ctrl-A to other apps
bind -N "* Send the prefix key" C-a send-prefix

# Setting the delay between prefix and command
set -s escape-time 1

# -r 使快捷键变为可重复的, 按下前缀后一直可以按这个快捷键
# 默认最大重复限制为500ms, 可以通过设置 repeat-time 修改最大值
set -g repeat-time 700
set -s focus-events on

set -g history-limit 5000

bind -N "* Source config file: ${TMUX_CONF}" r source-file ${TMUX_CONF} \; display '#{TMUX_CONF} sourced'

# bind e new-window -n '~/.config/tmux/tmux.conf' "sh -c '\${EDITOR:-nvim} ~/.config/tmux/tmux.conf && tmux source ~/.config/tmux/tmux.conf && tmux display \"~/.config/tmux/tmux.conf sourced\"'"

# clear both screen and history
# bind -n C-l send-keys C-l \; run 'sleep 0.2' \; clear-history

# Update the status line interval seconds
set -g status-interval 30

# eneable activity alerts
setw -g monitor-activity off
set -g visual-activity on

# mouse support
set -g mouse off


# --- display ---
# Set the base index for windows to 1 instead of 0
set -g base-index 1
# Set the base index for panes to 1 instead of 0
set -g pane-base-index 1

setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed

set -g display-panes-time 3000
set -g display-time 0

# set the status line's colors
set -g status-style fg=colour136,bg=default

# set the color of the window list
setw -g window-status-style fg=colour244,bg=default

# set colors for the current window
setw -g window-status-current-style fg=colour166,bold,bg=default,bright

#set colors for the activity window
setw -g window-status-activity-style fg=red,bg=default

# colors for pane borders
# setw -g pane-border-style fg=colour235
setw -g pane-border-style fg="#284c25"
# setw -g pane-active-border-style fg=colour136,bg=colour235
# setw -g pane-active-border-style fg=colour136,bg=default
setw -g pane-active-border-style fg=green

# active pane normal, other shaded out
setw -g window-style fg=colour10,bg=default
setw -g window-active-style fg=colour12,bg=default

#Command / message line
set -g message-style fg=colour166,bold,bg=colour235

# pane number display
set -g display-panes-colour colour166 #orange
set -g display-panes-active-colour colour33 #blue

# clock color
# setw -g clock-mode-colour colour166 #green
setw -g clock-mode-colour green #green

# Center the window list in the status line
set -g status-justify centre

set -g pane-border-format " #{pane_index} #{pane_title} "
set -g pane-border-status bottom

#Status line left side to show Session:window:pane
# Variable Description
# #H Hostname of local host
# #h Hostname of local host without the domain name
# #F Current window flag
# #I Current window index
# #P Current pane index
# #S Current session name
# #T Current pane title
# #W Current window name
# ## A literal #
# #(shell-command)First line of the shell command’s output#[attributes]Color or attribute change”
set -g status-left-length 40
set -g status-left "#[fg=green] #S:#[fg=cyan]#I.#[fg=yellow]#P#[fg=colour136]"

# set -g status-right "#T #[fg=colour23]%m-%d %H:%M"

set -g status-right-length 41
# set -g status-right "#{=|-17|...;s|$HOME|~|:pane_current_path} • #{continuum_status} • #[fg=cyan,dim]%m-%d %H:%M"
set -g status-right "#[fg=red]#{?pane_synchronized,#[fg=red]󰓧,}"
set -ag status-right " #[fg=blue]#{=|-21|...;s|$HOME|~|:pane_current_path} • #[fg=cyan,dim]%m-%d %H:%M"
# colour23

set -g set-titles on          # set terminal title
# set -g set-titles-string '❐ #S:#I•#P #W' #  ●
set -g set-titles-string '󰀾  #S:#I•#P #W' #  ●

# splitting panes with | and -
bind -N "* Split window horizontally" | split-window -h
bind -N "* Split window vertically" _ split-window -v

# split pane and retain the current directory of existing pane
bind -N "* Split window vertically with: #{pane_current_path}" - split-window -v -c "#{pane_current_path}"
bind -N "* Split window horizontally with: #{pane_current_path}" \\ split-window -h -c "#{pane_current_path}"

# moving between panes with Prefix h,j,k,l
bind -N "* Select pane left" h select-pane -L
bind -N "* Select pane below" j select-pane -D
bind -N "* Select pane above" k select-pane -U
bind -N "* Select pane right" l select-pane -R
bind -N "* Swap pane with next one" > swap-pan -D # swap current pane with the next one
bind -N "* Swap pane with previous one" < swap-pan -U # swap current pane with the previous one

# Quick window select
bind -N "* Select window previous(r)" -r C-h select-window -t:-
bind -N "* Select window next(r)" -r C-l select-window -t:+

# Pane resizing panes with Prefix H,J,K,L
bind -N "* Resize pane H(r)" -r H resize-pane -L 3
bind -N "* Resize pane J(r)" -r J resize-pane -D 3
bind -N "* Resize pane K(r)" -r K resize-pane -U 3
bind -N "* Resize pane L(r)" -r L resize-pane -R 3

# bind -N "* List Keys" k list-keys

# enable vi key
setw -g mode-key vi

bind -N "* Enter copy mode" Escape copy-mode
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi C-v send -X rectangle-toggle
bind -T copy-mode-vi y send -X copy-selection
bind -T copy-mode-vi Escape send -X cancel
bind -T copy-mode-vi H send -X start-of-line
bind -T copy-mode-vi L send -X end-of-line

unbind p
bind -N "* List buffers" b list-buffers
bind -N "* Paste buffer" p paste-buffer -p

# shortcut for synchronize-panes toggle
# 将操作输入同步到其他同一个window的panes中
bind -N "* Synchronize Panes" C-m set-window-option synchronize-panes \; display "synchronize-panes toggle... #{?pane_synchronized,on,off}"

unbind ,
bind-key , command-prompt -p (rename-window) "rename-window '%%'"
# bind-key , command-prompt -I "#W" -p (rename-window) "rename-window '%%'"

# Log output to a text file on demand(toggle)
# tail -f 时会出错, 暂时不用
# bind P pipe-pane -o "cat >> ~/#W.log" \; display "Toggled logging to ~/#W.log"

# load mac-specific settings
if-shell "uname -s | grep -q Darwin" "source ~/.config/tmux/tmux.mac.conf"

# `prefix + I` - Install plugin
# `prefix + U` - Update plugin
# `prefix + alt + u` - remove/uninstall plugins not on the plugin list
set -g @plugin "tmux-plugins/tpm"

set -g @plugin 'aserowy/tmux.nvim'

# set -g @plugin 'christoomey/vim-tmux-navigator'

# # prefix + Ctrl-s save
# # prefix + Ctrl-r restore
# set -g @plugin "tmux-plugins/tmux-resurrect"
# # restoring pane contents
# set -g @resurrect-capture-pane-contents 'on'
# set -g @resurrect-save 'C-s'
# set -g @resurrect-restore 'C-r'

# set -g @plugin "tmux-plugins/tmux-continuum"
# set -g @continuum-status-on-wrap-style "#[fg=green]󰁯 #{value}"
# set -g @continuum-status-off-wrap-style "#[fg=yellow]󱄍 #{value}"
# # not auto restore tmux, only save
# set -g @continuum-save-interval "10"
# set -g @continuum-restore "off"


run '~/.config/tmux/plugins/tpm/tpm'

