[source.crates-io]
# registry = "https://github.com/rust-lang/crates.io-index"
# 指定镜像
# source-rsproxy-sparse: install或update命令时每次要fetch, 项目使用的依赖越多, 时间越长
# replace-with = 'ustc' # 如：tuna、sjtu、ustc，或者 rustcc
# replace-with = 'rsproxy'
replace-with = 'rsproxy-sparse'

[source.rsproxy]
registry = "https://rsproxy.cn/crates.io-index"

[source.rsproxy-sparse]
registry = "sparse+https://rsproxy.cn/index/"

# [registries.crates-io]
# protocol = "git"

[registries.rsproxy]
index = "https://rsproxy.cn/crates.io-index"

[registries.rsproxy-sparse]
# index = "https://rsproxy.cn/crates.io-index"
index = "sparse+https://rsproxy.cn/index/"

# ^^^^^^^^^^^^^^^^^^^
# cargo-update
# [source.xxx]和[registries.xxx]后面的键值要一样

# [registry]
# binstall用registry-rsproxy会有很长时间的解析过程
# 如果定义这个, 会在项目的依赖中添加registry字段
# default = "registry-rsproxy"
# default = "registry-rsproxy-sparse"

[net]
git-fetch-with-cli = true

# 注：以下源配置一个即可，无需全部

# 中国科学技术大学
[source.ustc]
# registry = "https://mirrors.ustc.edu.cn/crates.io-index"
# >>> 或者 <<<
registry = "git://mirrors.ustc.edu.cn/crates.io-index"

# 上海交通大学
[source.sjtu]
registry = "https://mirrors.sjtug.sjtu.edu.cn/git/crates.io-index/"

# 清华大学
[source.tuna]
registry = "https://mirrors.tuna.tsinghua.edu.cn/git/crates.io-index.git"

# rustcc社区
[source.rustcc]
registry = "https://code.aliyun.com/rustcc/crates.io-index.git"

[build]
rustc-wrapper = "sccache"

[http]
multiplexing = true

# https://bevyengine.org/learn/quick-start/getting-started/setup/#compile-with-performance-optimizations
# [profile.dev]
# 增量编译
# split-debuginfo = "unpacked"
# opt-level = 1

# [profile.dev.package."*"]
# opt-level = 3

# https://github.com/bevyengine/bevy/blob/main/.cargo/config_fast_builds.toml

[target.x86_64-unknown-linux-gnu]
linker = "clang"
rustflags = [
  # LLD linker
  #
  # You may need to install it:
  #
  # - Ubuntu: `sudo apt-get install lld clang`
  # - Fedora: `sudo dnf install lld clang`
  # - Arch: `sudo pacman -S lld clang`
  "-Clink-arg=-fuse-ld=lld",

  # Mold linker
  #
  # You may need to install it:
  #
  # - Ubuntu: `sudo apt-get install mold clang`
  # - Fedora: `sudo dnf install mold clang`
  # - Arch: `sudo pacman -S mold clang`
  # "-Clink-arg=-fuse-ld=/usr/bin/mold",

  # Nightly
  # "-Zshare-generics=y",
  # "-Zthreads=0",
]

[target.x86_64-apple-darwin]
rustflags = [
  # LLD linker
  #
  # The default ld64 linker is faster, you should continue using it instead.
  #
  # You may need to install it:
  #
  # Brew: `brew install llvm`
  # Manually: <https://lld.llvm.org/MachO/index.html>
  # "-Clink-arg=-fuse-ld=/usr/local/opt/llvm/bin/ld64.lld",

  # Nightly
  # "-Zshare-generics=y",
  # "-Zthreads=0",
]

[target.aarch64-apple-darwin]
rustflags = [
  # LLD linker
  #
  # The default ld64 linker is faster, you should continue using it instead.
  #
  # You may need to install it:
  #
  # Brew: `brew install llvm`
  # Manually: <https://lld.llvm.org/MachO/index.html>
  "-Clink-arg=-fuse-ld=/opt/homebrew/opt/llvm/bin/ld64.lld",

  # Nightly
  # "-Zshare-generics=y",
  # "-Zthreads=0",
]

[target.x86_64-pc-windows-msvc]
# LLD linker
#
# You may need to install it:
#
# ```
# cargo install -f cargo-binutils
# rustup component add llvm-tools
# ```
linker = "rust-lld.exe"
rustflags = [
  # Nightly
  # "-Zshare-generics=y",
  # "-Zthreads=0",
]

# Optional: Uncommenting the following improves compile times, but reduces the amount of debug info to 'line number tables only'
# In most cases the gains are negligible, but if you are on macos and have slow compile times you should see significant gains.
# [profile.dev]
# debug = 1
