allprojects {
    def ALIYUN_REPOSITORY_URL = 'http://maven.aliyun.com/repository/public'
    def ALIYUN_JCENTER_URL = 'http://maven.aliyun.com/repository/jcenter'
    buildscript {
        repositories {
            all { ArtifactRepository repo ->
                if(repo instanceof MavenArtifactRepository){
                    def url = repo.url.toString()
                    if(url.startsWith('https://repo1.maven.org/maven2')){
                        project.logger.lifecycle "WARNING: BuildScript Repository ${repo.url} replaced by $ALIYUN_REPOSITORY_URL."
                        remove repo
                    }
                    if(url.startsWith('https://jcenter.bintray.com/')){
                        project.logger.lifecycle "WARBING: BuildScript Repository ${repo.url} replaced by $ALIYUN_JCENTER_URL."
                        remove repo
                    }
                }
            }
            maven{
                url ALIYUN_REPOSITORY_URL
            }
            maven {
                url ALIYUN_JCENTER_URL
            }
            // mavenLocal()
            // maven(){
                // name "public-Nexus Maven Repo"
                // url 'http://127.0.0.1:8081/nexus/content/groups/public'
            // }
        }
    }
    repositories {
        all { ArtifactRepository repo ->
            if(repo instanceof MavenArtifactRepository){
                def url = repo.url.toString()
                if(url.startsWith('https://repo1.maven.org/maven2')){
                    project.logger.lifecycle "WARBING: Repository ${repo.url} replaced by $ALIYUN_REPOSITORY_URL."
                    remove repo
                }
                if(url.startsWith('https://jcenter.bintray.com/')){
                    project.logger.lifecycle "WARBING: Repository ${repo.url} replaced by $ALIYUN_JCENTER_URL."
                    remove repo
                }
            }
        }
        maven{
            url ALIYUN_REPOSITORY_URL
        }
        maven {
            url ALIYUN_JCENTER_URL
        }
        // mavenLocal()
        // maven(){
            // name "public-Nexus Maven Repo"
            // url 'http://127.0.0.1:8081/nexus/content/groups/public'
        // }
    }

    task showRepos {
        doLast {
            description 'Show Tasks in Gradle Project'
                group 'custom'
                println "All repos:"
                repositories.each {
                    if (it.metaClass.hasProperty(it, 'url') != null) {
                        println "repo: ${it.name} ('${it.url}')"
                    } else if (it.metaClass.hasProperty(it, 'dirs') != null) {
                        println "repo: ${it.name} ('${it.dirs}')"
                    }
                }
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.incremental = true
    }
    tasks.withType(Javadoc){
        options.encoding = "UTF-8"
        options.charSet = "UTF-8"
    }
    configurations.all {
         // resolutionStrategy.cacheDynamicVersionsFor 10, 'minutes'
         // resolutionStrategy.cacheChangingModulesFor 10, 'minutes'
    }
}
